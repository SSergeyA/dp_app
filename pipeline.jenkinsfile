def gitTag = null
a=''
pipeline {
    agent {
        kubernetes {
            yaml """
kind: Pod
metadata:
  name: kaniko
spec:
  containers:
  - name: helm-cli
    image: alpine/helm
    command:
    - cat
    tty: true
  - name: kaniko
    image: gcr.io/kaniko-project/executor:debug
    imagePullPolicy: IfNotPresent
    command:
    - cat
    tty: true
    volumeMounts:
      - name: jenkins-docker-cfg
        mountPath: /kaniko/.docker
  volumes:
  - name: jenkins-docker-cfg
    projected:
      sources:
      - secret:
          name: sergey-local
          items:
            - key: .dockerconfigjson
              path: config.json
"""
        }
    }
    environment { 
                TAG_NAME = sh(returnStdout: true, script: "git tag --contains").trim()
    }
    stages {
        // Раскоментировать если pipeline script from SCM
       // stage('GIT') {
       //     steps {
       //         git branch: 'EDIT', url: 'https://github.com/SSergeyA/dp_app'
       //     }
       // }

        stage('pre BUILD') {
            steps {
                   script {
                        gitTag = sh(returnStdout: true, script: "git tag --contains").trim()
                        echo " ${gitTag}"
                        echo 'gitTag'
                       
                        sh "echo  ${env.TAG_NAME}"
                   }
                   
              }      
        }                
      
//        stage('BUILD If tagged') {
//         when {
//           expression {
//             return env.TAG_NAME;
//           }
//         }
//         steps {
//             container(name: 'kaniko') {
//                 sh ''' 
///kaniko/executor --dockerfile `pwd`/Dockerfile --context `pwd` --destination=ssergeya/dp_app:nginx$TAG_NAME
//                        '''
//             }  
//         }
//        }
//         
//        stage('BUILD If not tagged') {
//          when {
//              not {
//                  expression {
//                    return env.TAG_NAME;
//                 }
//              }         
//          }
//          steps {
//              container(name: 'kaniko') {
//                 sh ''' 
///kaniko/executor --dockerfile `pwd`/Dockerfile --context `pwd` --destination=ssergeya/dp_app:nginx$BUILD_NUMBER
//                        '''
//             }  
//          }
//        }    
        
        stage('DEPLOY If tagged') {
          when { 
           expression {
             return env.TAG_NAME;
           }
         }
         steps {
             container(name: 'helm-cli') {
                   script {
                     sh 'ls -l'
                     // sh "echo  ${env.TAG_NAME}"
                     sh " echo 'appVersion: "nginx'$TAG_NAME'"' >> $PWD/dp_app_helm/Chart.yaml "
                     // sh "cat ~/dp_app_helm/Chart.yaml"
                   }
                // sh "helm upgrade diploma helm/ --install --namespace stage"
             }  
         }
        }
      }  
  
      
      //  stage('DEPLOY') {
      //      steps {
      //        kubernetesDeploy configs: 'deployment.yaml', kubeConfig: [path: ''], kubeconfigId: 'cube-conf-admin', secretName: '', ssh: [sshCredentialsId: '*', sshServer: ''], textCredentials: [certificateAuthorityData: '', clientCertificateData: '', clientKeyData: '', serverUrl: 'https://']
      //      }
      //  }
    
}
