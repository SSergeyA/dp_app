def gitTag = null
a=''
pipeline {
    agent {
        kubernetes {
            yaml """
kind: Pod
metadata:
  name: kaniko
spec:
  containers:
  - name: helm-cli
    image: alpine/helm
    command:
    - cat
    tty: true
  - name: kaniko
    image: gcr.io/kaniko-project/executor:debug
    imagePullPolicy: IfNotPresent
    command:
    - cat
    tty: true
    volumeMounts:
      - name: jenkins-docker-cfg
        mountPath: /kaniko/.docker
  volumes:
  - name: jenkins-docker-cfg
    projected:
      sources:
      - secret:
          name: sergey-local
          items:
            - key: .dockerconfigjson
              path: config.json
"""
        }
    }
     environment { 
                TAG_NAME = sh(returnStdout: true, script: "git tag --contains").trim()
    stages {
        // Удалить если pipeline script from SCM
       // stage('GIT') {
       //     steps {
       //         git branch: 'EDIT', url: 'https://github.com/SSergeyA/dp_app'
       //     }
       // }

        stage('pre BUILD') {
        //    environment { 
        //            TAG_NAME = sh(returnStdout: true, script: "git tag --contains").trim()
        //    }        
            steps {
                   script {
         //               gitTag = sh(returnStdout: true, script: "git tag --contains").trim()
                        echo " ${gitTag}"
                        echo 'gitTag'
                        sh 'env'
                        sh "echo  ${env.TAG_NAME}"
                   }
                   
              }      
        }                
       
       stage('If tagged') {
         when {
           expression {
             return gitTag;
           }
         }
         steps {
             container(name: 'kaniko') { 
                script {
                    sh 'env'
//                 sh ''' 
///kaniko/executor --dockerfile `pwd`/Dockerfile --context `pwd` --destination=ssergeya/dp_app:nginx$TAG_NAME
//                        '''
                 }             
             }  
         }
        }
         
        stage('If not tagged') {
          when {
              not {
                  expression {
                    return gitTag;
                  }
              }         
          }
          steps {
              echo '9000  not '
          }
        }    
        
        stage('BUILD') {
            steps {
                container(name: 'kaniko') {
                  script {
                    if (env.TAG_NAME) {
//                      sh ''' 
///kaniko/executor --dockerfile `pwd`/Dockerfile --context `pwd` --destination=ssergeya/dp_app:nginx${gitTag}
//                        '''
                    } else {
//                      sh ''' 
///kaniko/executor --dockerfile `pwd`/Dockerfile --context `pwd` --destination=ssergeya/dp_app:nginx$BUILD_NUMBER
//                         '''
                    } 
                 }   
                }
            }
        }

      //  stage('DEPLOY') {
      //      steps {
      //        kubernetesDeploy configs: 'deployment.yaml', kubeConfig: [path: ''], kubeconfigId: 'cube-conf-admin', secretName: '', ssh: [sshCredentialsId: '*', sshServer: ''], textCredentials: [certificateAuthorityData: '', clientCertificateData: '', clientKeyData: '', serverUrl: 'https://']
      //      }
      //  }
    }
}
